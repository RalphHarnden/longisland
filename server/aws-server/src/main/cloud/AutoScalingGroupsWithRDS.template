{
  "AWSTemplateFormatVersion": "2010-09-09",
     "Parameters": {
            "KeyName": {
            "Description": "Name of an existing EC2 KeyPair to enable SSH access to the instances", 
            "Type": "String",
            "MinLength": "1",
    	  "MaxLength": "64",
    	  "AllowedPattern" : "[-_ a-zA-Z0-9]*",
            "ConstraintDescription" : "can contain only alphanumeric characters, spaces, dashes and underscores."
            },
            "AMIID": {
  	    "Description": "Name of an existing AMI from which to launch instances", 
  	    "Type": "String",
  	    "Default": "ami-d8537a9d",
  	    "MinLength": "1",
  	    "MaxLength": "64",
  	    "AllowedPattern" : "[-_ a-zA-Z0-9]*",
  	    "ConstraintDescription" : "can contain only alphanumeric characters, spaces, dashes and underscores."
            },
            "AvailabilityZone1" :{
            "Description": "Name of availability zone in which to put Magnet server group 1; Put 1 & 2 in different zones within the same region", 
            "Type": "String",
            "Default": "us-west-1a",
            "AllowedValues": [
  		  "us-east-1a",
  		  "us-east-1c",
  		  "us-east-1d",
  		  "us-west-1a",
  		  "us-west-1b",
  		  "us-west-2a",
  		  "us-west-2b",
  		  "us-west-2c",
  		  "eu-west-1a",
  		  "eu-west-1b",
  		  "eu-west-1c",
  		  "ap-northeast-1a",
  		  "ap-northeast-1b",	
  		  "ap-northeast-1c",
  		  "sa-east-1a",
  		  "sa-east-1b",
  		  "ap-southeast-1a",	
  		  "ap-southeast-1b",
  		  "ap-southeast-2a",
  		  "ap-southeast-2b"	
            	],
            "ConstraintDescription": "must be a valid EC2 Availability zone."
            },
            "AvailabilityZone2" :{
            "Description": "Name of availability zone in which to put Magnet server group 2; Put 1 & 2 in different zones within the same region", 
            "Type": "String",
            "Default": "us-west-1b",
            "AllowedValues": [
  		  "us-east-1a",
  		  "us-east-1c",
  		  "us-east-1d",
  		  "us-west-1a",
  		  "us-west-1b",
  		  "us-west-2a",
  		  "us-west-2b",
  		  "us-west-2c",
  		  "eu-west-1a",
  		  "eu-west-1b",
  		  "eu-west-1c",
  		  "ap-northeast-1a",
  		  "ap-northeast-1b",	
  		  "ap-northeast-1c",
  		  "sa-east-1a",
  		  "sa-east-1b",
  		  "ap-southeast-1a",	
  		  "ap-southeast-1b",
  		  "ap-southeast-2a",
  		  "ap-southeast-2b"	
            	],
            "ConstraintDescription": "must be a valid EC2 Availability zone."
            },
            "InstanceType": {
                "Description": "Magnet Server EC2 instance type", 
                "Type": "String", 
                "Default": "m1.medium", 
                "AllowedValues": [
                    "t1.micro", 
                    "m1.small", 
                    "m1.medium", 
                    "m1.large", 
                    "m1.xlarge", 
                    "m2.xlarge", 
                    "m2.2xlarge", 
                    "m2.4xlarge", 
                    "m3.xlarge", 
                    "m3.2xlarge", 
                    "c1.medium", 
                    "c1.xlarge", 
                    "cc1.4xlarge", 
                    "cc2.8xlarge", 
                    "cg1.4xlarge"
                ], 
                "ConstraintDescription": "must be a valid EC2 instance type."
            } 
    }, 
  "Resources": {
    "longisland-ElasticLoadBalancer": {
      "Type": "AWS::ElasticLoadBalancing::LoadBalancer",
      "Properties": {
        "AvailabilityZones": { "Fn::GetAZs" : "" },
        "HealthCheck": {
          "HealthyThreshold": "6",
          "Interval": "30",
          "Target": "HTTP:8080/rest/controllers.json",
          "Timeout": "5",
          "UnhealthyThreshold": "3"
        },
        "Listeners": [
          {
            "InstancePort": "8080",
            "LoadBalancerPort": "80",
            "Protocol": "HTTP",
            "InstanceProtocol": "HTTP",
            "PolicyNames": [
	        "AWSConsolePolicy-1"
            ]
          }
        ],
         "AppCookieStickinessPolicy": [
	  {
	    "PolicyName": "AWSConsolePolicy-1",
	    "CookieName": "jsessionid"
	  }
        ]
      }
    },
    "AutoScalingGroupMES1": {
      "Type": "AWS::AutoScaling::AutoScalingGroup",
      "Properties": {
        "AvailabilityZones": { "Ref" : "AvailabilityZone1" },
        "Cooldown": "300",
        "DesiredCapacity": "1",
        "MaxSize": "3",
        "MinSize": "1",
        "HealthCheckGracePeriod": "300",
        "HealthCheckType": "ELB",
        "LaunchConfigurationName": {
          "Ref": "lcmes1config"
        },
        "LoadBalancerNames": [
          {
            "Ref": "longisland-ElasticLoadBalancer"
          }
        ]
      }
    },
    "AutoScalingGroupMES2": {
      "Type": "AWS::AutoScaling::AutoScalingGroup",
      "Properties": {
        "AvailabilityZones": { "Ref" : "AvailabilityZone2" },
        "Cooldown": "300",
        "DesiredCapacity": "1",
        "MaxSize": "3",
        "MinSize": "1",
        "HealthCheckGracePeriod": "300",
        "HealthCheckType": "ELB",
        "LaunchConfigurationName": {
          "Ref": "lcmes2config"
        },
        "LoadBalancerNames": [
          {
            "Ref": "longisland-ElasticLoadBalancer"
          }
        ]
      }
    },
    "rdstestdbinstance": {
      "Type": "AWS::RDS::DBInstance",
      "Properties": {
        "AllocatedStorage": "5",
        "AutoMinorVersionUpgrade": "true",
        "AvailabilityZone": "us-west-1a",
        "BackupRetentionPeriod": "1",
        "DBInstanceClass": "db.t1.micro",
        "DBName": "MyDatabase",
        "Engine": "mysql",
        "EngineVersion": "5.5.31",
        "LicenseModel": "general-public-license",
        "MasterUsername": "management_admin",
        "MasterUserPassword": "MyPassword",
        "MultiAZ": "true",
        "Port": "3306",
        "PreferredBackupWindow": "11:21-11:51",
        "PreferredMaintenanceWindow": "sat:07:49-sat:08:19",
        "DBSecurityGroups": [
          {
            "Ref": "dbsgdefault"
          }
        ]
      }
    },
    "lcmes1config": {
      "Type": "AWS::AutoScaling::LaunchConfiguration",
      "Properties": {
        "ImageId": { "Ref" : "AMIID" },
        "InstanceType": { "Ref" : "InstanceType" },
        "KeyName": { "Ref" : "KeyName" },
        "InstanceMonitoring": "true",
        "SecurityGroups": [
          {
            "Ref": "longisland-SecurityPolicyGroup"
          }
        ]
      }
    },
    "lcmes2config": {
      "Type": "AWS::AutoScaling::LaunchConfiguration",
      "Properties": {
        "ImageId": { "Ref" : "AMIID" },
        "InstanceType": { "Ref" : "InstanceType" },
        "KeyName": { "Ref" : "KeyName" },
        "InstanceMonitoring": "true",
        "SecurityGroups": [
          {
            "Ref": "longisland-SecurityPolicyGroup"
          }
        ]
      }
    },
    "longisland-SecurityPolicyGroup": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "SG with SSH/HTTP/HTTPS from anywhere",
        "SecurityGroupIngress": [
          {
            "IpProtocol": "tcp",
            "FromPort": "22",
            "ToPort": "22",
            "CidrIp": "0.0.0.0/0"
          },
          {
            "IpProtocol": "tcp",
            "FromPort": "80",
            "ToPort": "80",
            "CidrIp": "0.0.0.0/0"
          },
          {
            "IpProtocol": "tcp",
            "FromPort": "443",
            "ToPort": "443",
            "CidrIp": "0.0.0.0/0"
          },
          {
            "IpProtocol": "tcp",
            "FromPort": "8080",
            "ToPort": "8080",
            "CidrIp": "0.0.0.0/0"
          }
        ]
      }
    },
    "dbsgdefault": {
      "Type": "AWS::RDS::DBSecurityGroup",
      "Properties": {
        "GroupDescription": "default"
      }
    },
    "MES1ScaleDownPolicy": {
      "Type": "AWS::AutoScaling::ScalingPolicy",
      "Properties": {
        "AdjustmentType": "ChangeInCapacity",
        "Cooldown": "300",
        "ScalingAdjustment": "-1",
        "AutoScalingGroupName": {
          "Ref": "AutoScalingGroupMES1"
        }
      }
    },
    "MES2ScaleDownPolicy": {
      "Type": "AWS::AutoScaling::ScalingPolicy",
      "Properties": {
        "AdjustmentType": "ChangeInCapacity",
        "Cooldown": "300",
        "ScalingAdjustment": "-1",
        "AutoScalingGroupName": {
          "Ref": "AutoScalingGroupMES2"
        }
      }
    },
    "MES1ScaleUpPolicy": {
      "Type": "AWS::AutoScaling::ScalingPolicy",
      "Properties": {
        "AdjustmentType": "ChangeInCapacity",
        "Cooldown": "300",
        "ScalingAdjustment": "1",
        "AutoScalingGroupName": {
          "Ref": "AutoScalingGroupMES1"
        }
      }
    },
    "MES2ScaleUpPolicy": {
      "Type": "AWS::AutoScaling::ScalingPolicy",
      "Properties": {
        "AdjustmentType": "ChangeInCapacity",
        "Cooldown": "300",
        "ScalingAdjustment": "1",
        "AutoScalingGroupName": {
          "Ref": "AutoScalingGroupMES2"
        }
      }
    },
      "serverscaleupmes1": {
                  "Properties": {
                      "EvaluationPeriods": "3",
                      "Statistic": "Average",
                      "Threshold": "90",
                      "AlarmDescription": "Scale-up if CPU > 90% for 60 seconds or if data missing",
                      "Period": "60",
                      "AlarmActions": [
                          {
                              "Ref": "MES1ScaleUpPolicy"
                          }
                      ],
                      "Namespace": "AWS/EC2",
                      "InsufficientDataActions": [
                          {
                              "Ref": "MES1ScaleUpPolicy"
                          }
                      ],
                      "Dimensions": [
                          {
                              "Name": "AutoScalingGroupName",
                              "Value": {
                                  "Ref": "AutoScalingGroupMES1"
                              }
                          }
                      ],
                      "ComparisonOperator": "GreaterThanThreshold",
                      "MetricName": "CPUUtilization"
                  },
                  "Type": "AWS::CloudWatch::Alarm"
              },
      "serverscalednmes1": {
                  "Properties": {
                      "EvaluationPeriods": "5",
                      "Statistic": "Average",
                      "Threshold": "15",
                      "AlarmDescription": "Scale-down if CPU < 15% for 60 seconds or if data missing",
                      "Period": "60",
                      "AlarmActions": [
                          {
                              "Ref": "MES1ScaleDownPolicy"
                          }
                      ],
                      "Namespace": "AWS/EC2",
                      "Dimensions": [
                          {
                              "Name": "AutoScalingGroupName",
                              "Value": {
                                  "Ref": "AutoScalingGroupMES1"
                              }
                          }
                      ],
                      "ComparisonOperator": "LessThanThreshold",
                      "MetricName": "CPUUtilization"
                  },
                  "Type": "AWS::CloudWatch::Alarm"
              },
      "serverscaleupmes2": {
                  "Properties": {
                      "EvaluationPeriods": "3",
                      "Statistic": "Average",
                      "Threshold": "90",
                      "AlarmDescription": "Scale-up if CPU > 90% for 60 seconds or if data missing",
                      "Period": "60",
                      "AlarmActions": [
                          {
                              "Ref": "MES2ScaleUpPolicy"
                          }
                      ],
                      "Namespace": "AWS/EC2",
                      "InsufficientDataActions": [
                          {
                              "Ref": "MES2ScaleUpPolicy"
                          }
                      ],
                      "Dimensions": [
                          {
                              "Name": "AutoScalingGroupName",
                              "Value": {
                                  "Ref": "AutoScalingGroupMES2"
                              }
                          }
                      ],
                      "ComparisonOperator": "GreaterThanThreshold",
                      "MetricName": "CPUUtilization"
                  },
                  "Type": "AWS::CloudWatch::Alarm"
              },
      "serverscalednmes2": {
                  "Properties": {
                      "EvaluationPeriods": "5",
                      "Statistic": "Average",
                      "Threshold": "15",
                      "AlarmDescription": "Scale-down if CPU < 15% for 60 seconds or if data missing",
                      "Period": "60",
                      "AlarmActions": [
                          {
                              "Ref": "MES2ScaleDownPolicy"
                          }
                      ],
                      "Namespace": "AWS/EC2",
                      "Dimensions": [
                          {
                              "Name": "AutoScalingGroupName",
                              "Value": {
                                  "Ref": "AutoScalingGroupMES2"
                              }
                          }
                      ],
                      "ComparisonOperator": "LessThanThreshold",
                      "MetricName": "CPUUtilization"
                  },
                  "Type": "AWS::CloudWatch::Alarm"
        }
  },        
  "Description": "Magnet MES Cloudformer template with\r\n- Autoscaling groups in two separate Zones\r\n- RDS with Replication "
}